#+LATEX_CLASS: ramsay-org-article
#+LATEX_CLASS_OPTIONS: [oneside,A4paper,12pt]
#+AUTHOR: Ramsay Leung
#+EMAIL: ramsayleung@gmail.com
#+DATE: 2022-11-30 Wed 13:14
练习2-60:

#+begin_src scheme
  (define (element-of-set? x set)
    (not (not (memq x set))))

  (define (adjoin-set x set)
    (cons x set))

  (define (union-set set1 set2)
    (append set1 set2))

  (define (intersection-set set1 set2)
    (cond ((or (null? set1) (null? set2)) '())
	  ((element-of-set? (car set1) set2)
	   (cons (car set1)
		 (intersection-set (cdr set1) set2)))
	  (else (intersection-set (cdr set1) (set2)))))

  (define set1 (list 1 2 3 3))
  (define set2 (list 2 3 2 1 3 2 2))

  (element-of-set? 3 set1) ; => #t
  (element-of-set? 4 set1) ; => #f
  (adjoin-set 4 set1) ; => (4 1 2 3 3)
  (union-set set1 set2) ;=> (1 2 3 3 2 3 2 1 3 2 2)
  (intersection-set set1 set2) ; => (1 2 3 3)
#+end_src

=element-of-set?= 的时间复杂度依然是=O(n)= ， =adjoin-set=的时间度为 =O(1)=, 因为已经不依赖 =element-of-set?= 函数了。

=union-set= 的时间复杂度为 =O(n)= ，因为需要遍历set1.

而 =intersection-set= 依然依赖 =element-of-set= 函数，它需要对set1的每个元素做一次=element-of-set?= 检查，因此它的时间复杂度是 $O(N^2)$ 

应用场景：对性能要求较高，希望空间换时间的应用。

